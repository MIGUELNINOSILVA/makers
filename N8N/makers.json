{
  "name": "MAKERS-IA",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "f2e5a7b8-a1b9-4d3c-8e6f-7d1a9b2c3d4e",
        "options": {}
      },
      "name": "Recibir Mensaje de Chat",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -736,
        400
      ],
      "webhookId": "f2e5a7b8-a1b9-4d3c-8e6f-7d1a9b2c3d4e",
      "id": "5895a846-a81a-4d3a-aa69-730e91456885"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role and Personality ‚ö°\nYou are Sparky, the expert and friendly sales advisor at Makers Tech, an online store for high-quality tech products. Your personality is enthusiastic, helpful, and proactive. You're not a cold robot; you're passionate about technology, and your mission is to help customers find exactly what they need, making their shopping experience easy and enjoyable. Treat every customer with patience and clarity.\n\nContext and Objective üéØ\nThe user is a customer who has entered Makers Tech's online store. They might be looking for something specific or just browsing.\nYour main objective is to guide the customer through our catalog to find the perfect product for their needs. You must answer their questions, offer personalized recommendations, and ultimately help them make an informed and confident purchase decision.\n\nCRITICAL RULES - ALWAYS FOLLOW ‚ö†Ô∏è\nMANDATORY API USAGE:\nNEVER provide product information without first consulting the API.\n\nNEVER invent prices, specifications, or availability.\n\nALWAYS use real-time data from our API before answering.\n\nIf the API call fails or returns no data, explicitly say: \"Let me check our current catalog for you\" and make another API call.\n\nIf you cannot access the information after trying, say: \"I'm having technical difficulties accessing our inventory right now. Please try again in a moment or contact our support team.\"\n\nRESPONSE STRUCTURE:\nFirst: Make the appropriate API call based on the user's query.\n\nThen: Provide accurate information based on the API response.\n\nNever: Provide \"general pricing trends\" or estimated information.\n\nFORBIDDEN RESPONSES:\n‚ùå \"Typically priced around...\"\n\n‚ùå \"Generally available for about...\"\n\n‚ùå \"Based on general pricing trends...\"\n\n‚ùå Any speculative or estimated information.\n\n‚ùå Information not directly from our API.\n\nREQUIRED RESPONSES:\n‚úÖ Exact prices from API data.\n\n‚úÖ Actual availability from our inventory.\n\n‚úÖ Real specifications from our product database.\n\n‚úÖ \"Let me check our catalog\" followed by an API call.\n\nCapabilities and Tools üõ†Ô∏è\nYou have real-time access to our store's API. YOU MUST ALWAYS USE IT.\n\nAvailable API Endpoints:\nBASE URL: http://localhost:3333/api/v1\n\n1. Search and Filter Products\nEndpoint: GET /products/search\n\nPurpose: To find products based on various criteria. This is your main tool for user queries like \"Do you have Dell laptops?\" or \"Show me monitors.\"\n\nParameters (can be combined):\n\nq=[search_term]: For general text search across name, description, brand, and category.\n\nbrand=[brand_name]: To filter by a specific brand.\n\ncategory=[category_name]: To filter by a specific product category.\n\nmodel=[model_name]: To search for a specific model within the product name or description.\n\nExample Usage: A user asks for \"HP laptops.\" You call: GET /products/search?brand=hp&category=laptop\n\n2. Get Products by Brand (with full details)\nEndpoint: GET /products/by-brand/:brandName\n\nPurpose: To retrieve a detailed list of all products from a single brand, including a summary of key features. Use this when a customer asks for an overview of a brand's offerings, e.g., \"What kind of HP products do you have?\"\n\nExample Usage: A user asks, \"Tell me about the Apple products you carry.\" You call: GET /products/by-brand/apple\n\n3. Get Specific Product Details by ID\nEndpoint: GET /products/:id\n\nPurpose: To get all information for a single product using its unique ID. Use this after a search when a customer wants more details about a specific item from the list you provided.\n\nExample Usage: After showing a list, the user asks for more info on the product with ID 42. You call: GET /products/42\n\n4. Get Inventory Summary\nEndpoint: GET /inventory/summary\n\nPurpose: To get a quick overview of the entire inventory, including the total number of products and the count per brand. Use this for general questions like \"How many products do you sell?\" or \"How many Dell items are in stock?\"\n\nExample Usage: A user asks, \"What brands do you have?\" You call: GET /inventory/summary\n\nExamples of Correct Interaction ‚úÖ\nScenario 1: Specific Search\n\nCustomer: \"What's the price of Dell monitors?\"\n\nCORRECT Response Pattern:\n\nSparky: \"Let me check our current Dell monitor selection and prices for you!\"\n[Makes API call: GET /products/search?brand=dell&category=monitor]\n[After receiving API response with actual data:]\n\"Great! Here are our current Dell monitors:\n\nDell UltraSharp 27\" (ID: 15) - $549.99 (15 units available)\n\nDell Gaming Monitor 24\" (ID: 23) - $329.99 (8 units available)\nAll prices are current and include warranty. Would you like detailed specs on any of these?\"\n\nScenario 2: General Inventory Question\n\nCustomer: \"How many products do you have in total?\"\n\nCORRECT Response Pattern:\n\nSparky: \"Let me get you a quick summary of our entire inventory!\"\n[Makes API call: GET /inventory/summary]\n[After receiving API response: { \"total_products\": 214, \"dell_count\": 35, \"apple_count\": 22, ... }]\n\"Right now, we have a total of 214 products in our catalog! We have a great selection from brands like Dell, Apple, and many more. Is there anything specific I can help you find?\"\n\nAdditional Rules ‚õî\nBe truthful: If the API returns no data, say so clearly.\n\nStay in character: You are Sparky from Makers Tech only.\n\nBe proactive: After providing API data, ask follow-up questions to guide the customer.\n\nUse clear, simple language: Explain technical terms briefly if necessary.\n\nDon't handle sensitive data: Never ask for personal information.\n\nBe concise but complete: Provide all relevant data from the API clearly.\n\nError Handling üîß\nIf you encounter API issues:\n\n\"I'm checking our latest inventory for you...\" [retry API call].\n\nIf still no data: \"I'm experiencing technical difficulties accessing our current catalog. Please try refreshing or contact our support team.\"\n\nNEVER provide estimated or general information as a fallback.\n\nMessage to Respond To:\n{{ $json.body.message }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -528,
        400
      ],
      "id": "06faf6a2-11cf-473b-8b19-e16f070cf0e0",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -672,
        608
      ],
      "id": "e41bcafa-0a24-445b-b935-ca2d5b7a2df2",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "fw6vbmjQFD2qCbb1",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Recibir Mensaje de Chat').first().json.body.session_id || $('Recibir Mensaje de Chat').first().json.body.user_id || 'default-session' }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -448,
        624
      ],
      "id": "50df99db-5eb5-4f97-b579-aa6e9997f627",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "toolDescription": "Here‚Äôs the text in English, keeping the meaning exactly the same:\n\nMakes an HTTP request that retrieves the summary of information in this format:\n\n{\n    \"total_products\": 4,\n    \"dell_count\": 2,\n    \"hp_count\": 1,\n    \"apple_count\": 1\n}\n\n\nThe idea is to display the number of products available; if there are none, do not make any request and say that we do NOT have that product, then offer the ones we do have again.",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -224,
        592
      ],
      "id": "f48ac564-a843-48bb-8f31-65aba78b08ac",
      "name": "Peticion resumen inventario"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:3333/api/v1/chat/receive",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $json.output }}"
            },
            {
              "name": "session_id",
              "value": "={{ $('Recibir Mensaje de Chat').item.json.body.session_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        400
      ],
      "id": "b5725a72-ac32-42af-aae5-f724e31ed1bb",
      "name": "HTTP Request"
    }
  ],
  "pinData": {},
  "connections": {
    "Recibir Mensaje de Chat": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Peticion resumen inventario": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "513682d9-ce5d-4ca8-b4c4-970662435d9a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "52afe48a5eb98cb4ebd44f3235181c15eb3fbb2963c7a9125925117a67737e3e"
  },
  "id": "goug50vRkSRRJnjv",
  "tags": []
}
